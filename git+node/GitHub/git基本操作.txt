获取git仓库
两种方式
将尚未进行版本控制的本地目录转换为git仓库
从其他服务器克隆一个已存在的git仓库

在现有目录中初始化仓库
如果自己有一个尚未进行版本控制的项目目录想要用git来控制，，需要执行如下两步骤
在项目目录中 通过鼠标右键打开 git bash
执行 git init 命令将当前目录转化为git仓库

工作区的文件四种状态
未被git管理：未跟踪（不被git所管理的文件）
已被git管理：未修改（工作区中内容和git仓库中文件内容保持一致），已修改（工作区和git仓库内容不一致），已暂存（工作区中被修改的文件被放到暂存区，准备修改后的文件保存到git仓库中）

git操作的结果是让工作区的文件内容都处于未修改状态

检查文件状态
git status命令查看文件处于什么状态
在状态报告中可以看到新建的index.html文件出现在Untracked files未跟踪的文件 下面 git不会自动跟踪文件
git status -s 精简方式检查文件状态
两个红色？？就是未跟踪标记

跟踪文件使用git add命令
git add index.html
处于 changes to be committed 则表示以跟踪并处于暂存状态，精简状态下显示绿色的A

更新提交
git commit命令提交暂存区的文件到git仓库
git commit -m “新建提交文件” 后面是本次提交的消息，用来对提交的内容做进一步描述
提交成功后证明工作区所有文件处于未修改状态，没有任何文件需要被提交

对已提交的文件进行修改
已修改还没有放入暂存区
modified  红色M

暂存已修改的文件
需要再次运行git add命令 这个命令的三个功能
1，可以用它开始跟踪新文件
2，把已跟踪的且已修改的文件放入暂存区
3，将有冲突的文件标记为已解决状态

提交已暂存的文件
再次运行git commit-m提交消息命令 即可将暂存区中记录的index.html的快照提交到git仓库中进行保存

撤销对文件的修改
git checkout--index.html 命令撤销修改
本指是用git仓库中保存的文件覆盖工作区中指定文件  
比较危险

向暂存区添加多个文件
git add 空格.点 将新增的页面加入到暂存区

取消暂存的文件
git reset HEAD  index.html
git reset HEAD . 点 移除所有文件

跳过使用暂存区
git标准工作流程是 工作区》暂存区》git仓库。
在提交时给 git commit - a 就可以跳过暂存区 -m 可以添加信息

从git仓库中移除文件
在git仓库和工作区同时移除index.html文件
git rm - f index.html
只在git仓库中移除，保留工作区文件
git rm --cached index.css

忽略文件
创建.gitignore的配置文件
# 开头 是注释
/ 结尾 是目录文件夹
/ 开头 防止递归
！开头 表示取反
用glob模式进行文件和文件夹匹配 glob指简化了的正则表达式
* 匹配0个或多个任意字符
[abc] 匹配任何一个列表在方括号中的字符 匹配一个a 或者匹配一个b 或者c 
？只匹配一个任意字符
在方括号中可以使用 - 分割字符表示范围 [0-9]
**表示匹配任意中间目录 (a/**/z) 匹配a/z   ,a/b/z  , a/b/c/z等

查看提交历史
使用git log 回顾提交历史 按照时间顺序，最新的排在最上面
q键退出查看
git log -2 表示查看最近两次的提交历史
自定义输出格式
%h 提交简写哈希值 %an 作者名字 %ar 作者修订日期，按多久以前的方式显示 %s 提交说明
git log -3 --pretty=format:"%h | %an | %ar | %s"

回退到指定版本
使用git log --pretty=oneline 在一行上显示所有提交历史
使用 git reset --hard <CommitID>提交指定的ID回退到指定版本
在旧版中使用 git reflog --pretty=oneline 查看命令操作的历史
再次更具最新的提交ID跳转到最新版本
git reset --hard <CommitID>
