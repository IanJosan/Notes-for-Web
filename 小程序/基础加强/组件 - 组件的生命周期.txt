1. 组件全部的生命周期函数
小程序组件可用的全部生命周期如下表所示：
生命周期函数  参数                 描述说明
created          无                     在组件实例刚刚被创建时执行
attached        无                     在组件实例进入页面节点树时执行
ready             无                     在组件在视图层布局完成后执行
moved           无                     在组件实例被移动到节点树另一个位置时执行
detached      无                      在组件实例被从页面节点树移除时执行
error             Object Error      每当组件方法抛出错误时执行

2. 组件主要的生命周期函数
在小程序组件中，最重要的生命周期函数有 3 个，分别是 created、attached、detached。它们各自的特点
如下：
① 组件实例刚被创建好的时候，created 生命周期函数会被触发
⚫ 此时还不能调用 setData
⚫ 通常在这个生命周期函数中，只应该用于给组件的 this 添加一些自定义的属性字段
② 在组件完全初始化完毕、进入页面节点树后， attached 生命周期函数会被触发
⚫ 此时， this.data 已被初始化完毕
⚫ 这个生命周期很有用，绝大多数初始化的工作可以在这个时机进行（例如发请求获取初始数据）
③ 在组件离开页面节点树后， detached 生命周期函数会被触发
⚫ 退出一个页面时，会触发页面内每个自定义组件的 detached 生命周期函数
⚫ 此时适合做一些清理性质的工作

3. lifetimes 节点
在小程序组件中，生命周期函数可以直接定义在 Component 构造器的第一级参数中，可以在 lifetimes 字段
内进行声明（这是推荐的方式，其优先级最高）。示例代码如下：
lifetimes: {
    created() {
      console.log('created++');
    },
    attached() {
      console.log('attached++');
    }
  }