1. 什么是 behaviors
behaviors 是小程序中，用于实现组件间代码共享的特性，类似于 Vue.js 中的 “mixins”。

2. behaviors 的工作方式
每个 behavior 可以包含一组属性、数据、生命周期函数和方法。组件引用它时，它的属性、数据和方法会被
合并到组件中。
每个组件可以引用多个 behavior，behavior 也可以引用其它 behavior。

3. 创建 behavior
调用 Behavior(Object object) 方法即可创建一个共享的 behavior 实例对象，供所有的组件使用：
module.exports = Behavior({
  data:{
    username:'zs'
  },
  properties:{},
  methods:{}
})

4. 导入并使用 behavior
在组件中，使用 require() 方法导入需要的 behavior，挂载后即可访问 behavior 中的数据或方法，示例代码
如下：
const myBehaviors = require ('../../behaviors/behaviors.js')
Component({
  /**
   * 组件的属性列表
   */
  behaviors:[myBehaviors],
  properties: {
    count:Number
  },
}
<view>在behaviors中的名字{{username}}</view>

5. behavior 中所有可用的节点
可用的节点       类型                   是否必填     描述
properties        Object Map      否              同组件的属性
data                  Object               否             同组件的数据
methods          Object               否            同自定义组件的方法
behaviors         String Array      否            引入其它的 behavior
created             Function           否             生命周期函数
attached          Function            否             生命周期函数
ready               Function            否               生命周期函数
moved             Function            否               生命周期函数
detached          Function          否               生命周期函数


6. 同名字段的覆盖和组合规则*
组件和它引用的 behavior 中可以包含同名的字段，此时可以参考如下 3 种同名时的处理规则：
① 同名的数据字段 (data)
② 同名的属性 (properties) 或方法 (methods)
③ 同名的生命周期函数