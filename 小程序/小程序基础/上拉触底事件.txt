上拉触底是移动端的专有名词，通过手指在屏幕上的上拉滑动操作，从而加载更多数据的行为

2. 监听页面的上拉触底事件
在页面的 .js 文件中，通过 onReachBottom() 函数即可监听当前页面的上拉触底事件。示例代码如下：
 onReachBottom:function() {
    console.log("触发上拉触底");
  }

3. 配置上拉触底距离
上拉触底距离指的是触发上拉触底事件时，滚动条距离页面底部的距离。
可以在全局或页面的 .json 配置文件中，通过 onReachBottomDistance 属性来配置上拉触底的距离。
小程序默认的触底距离是 50px，在实际开发中，可以根据自己的需求修改这个默认值。
 "onReachBottomDistance": 150

2. 案例的实现步骤
① 定义获取随机颜色的方法
② 在页面加载时获取初始数据
③ 渲染 UI 结构并美化页面效果
④ 在上拉触底时调用获取随机颜色的方法
⑤ 添加 loading 提示效果
⑥ 对上拉触底进行节流处理

3. 步骤6 - 对上拉触底进行节流处理
① 在 data 中定义 isloading 节流阀
⚫ false 表示当前没有进行任何数据请求
⚫ true 表示当前正在进行数据请求
② 在 getColors() 方法中修改 isloading 节流阀的值
⚫ 在刚调用 getColors 时将节流阀设置 true
⚫ 在网络请求的 complete 回调函数中，将节流阀重置为 false
③ 在 onReachBottom 中判断节流阀的值，从而对数据请求进行节流控制
⚫ 如果节流阀的值为 true，则阻止当前请求
⚫ 如果节流阀的值为 false，则发起数据请求