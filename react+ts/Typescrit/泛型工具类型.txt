泛型工具类型:TS 内置了一些常用的工具类型，来简化 TS 中的一些常见操作
---------------------------------------------
Partial<Type> 用来构造(创建)一个类型，将 Type 的所有属性设置为可选。
type Props =  {
  id: string
  children: number[]
}

type PartialProps = Partial<Props>
构造出来的新类型 PartialProps 结构和 Props 相同，但所有属性都变为可选的。

---------------------------------------------
Readonly<Type> 用来构造一个类型，将 Type 的所有属性都设置为 readonly(只读)。
type Props =  {
  id: string
  children: number[]
}

type ReadonlyProps = Readonly<Props>
构造出来的新类型 ReadonlyProps 结构和 Props 相同，但所有属性都变为只读的。

---------------------------------------------
Pick<Type, Keys> 从 Type 中选择一组属性来构造新类型。
interface Props {
  id: string
  title: string
  children: number[]
}
type PickProps = Pick<Props, 'id' | 'title'>
1. Pick 工具类型有两个类型变量:1 表示选择谁的属性 2 表示选择哪几个属性。 2. 其中第二个类型变量，如果只选择一个则只传入该属性名即可。
  2. 第二个类型变量传入的属性只能是第一个类型变量中存在的属性。
  3. 构造出来的新类型 PickProps，只有 id 和 title 两个属性类型。

---------------------------------------------
Omit<K,T>类型让我们可以从另一个对象类型中剔除某些属性，并创建一个新的对象类型：

K：是对象类型名称，T：是剔除K类型中的属性名称