- TS 为 JS 运行时可用的所有标准化内置 API 都提供了声明文件
- 比如，在使用数组时，数组所有方法都会有相应的代码提示以及类型信息

在实际项目开发时，如果你使用的第三方库没有自带的声明文件，VSCode 会给出明确的提示

下载第三方类型声明文件

npm i @types/文件名
-
npm i @types/lodash

----------------------------
自定义类型声明文件
1. 项目内共享类型
2. 为已有 JS 文件提供类型声明

操作步骤:
  1. 创建 index.d.ts 类型声明文件。
  2. 创建需要共享的类型，并使用 export 导出(TS 中的类型也可以使用 import/export 实现模块化功能)。
export interface Token {
   token:string,
    refrsh:number
}
  3. 在需要使用共享类型的 .ts 文件中，通过 import 导入即可(.d.ts 后缀导入时，直接省略)。
import {Token} from './index

-----------------------------------
为已有 JS 文件提供类型声明
1. 在将 JS 项目迁移到 TS 项目时，为了让已有的 .js 文件有类型声明。 
2. 成为库作者，创建库给其他人使用。

操作步骤：
1，添加同名的.d.ts文件
2，用declare 关键字类型声明
对于 type、interface 等这些明确就是 TS 类型的(只能在 TS 中使用的)，可以省略 declare 关键字。
对于 let、function 等具有双重含义(在 JS、TS 中都能用)，应该使用 declare 关键字，明确指定此处用于类型声明。
declare  let count :number
3,export{}导出所有类型声明