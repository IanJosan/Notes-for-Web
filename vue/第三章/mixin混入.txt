混入 mixin 一个混入对象可以包含任意组件选项（如data、methods、mounted等等）

局部混入
let mixin = {
  created() {
    console.log("我是mixin里面的created!")
  },
  methods: {
    hello() {
      console.log("hello from mixin!")
    }
  }
}
 
export default mixin
import myMixins from "../mixins"

全局混入
import mixin from './mixins';
Vue.mixin(mixin)

组件有 mixin：[] 方法来接收混入
---------------------------------------------------
Mixins特点
::: tip 提示

方法和参数在各组件中不共享
值为对象的选项，如methods,components等，选项会被合并，键冲突的组件会覆盖混入对象的
值为函数的选项，如created,mounted等，就会被合并调用，混合对象里的钩子函数在组件里的钩子函数之前调用
:::
与vuex的区别
::: tip 区别

vuex：用来做状态管理的，里面定义的变量在每个组件中均可以使用和修改，在任一组件中修改此变量的值之后，其他组件中此变量的值也会随之修改
Mixins：可以定义共用的变量，在每个组件中使用，引入组件中之后，各个变量是相互独立的，值的修改在组件中不会相互影响
:::
与公共组件的区别
::: tip 区别

组件：在父组件中引入组件，相当于在父组件中给出一片独立的空间供子
组件使用: 然后根据props来传值，但本质上两者是相对独立的
Mixins：则是在引入组件之后与组件中的对象和方法进行合并，相当于扩展了父组件的对象与方法，可以理解为形成了一个新的组件

在vue2.0中一些可复用的逻辑可以使用mixins来封装，当是需要考虑逻辑代码冲突问题。vue3.0的组合API很好的解决了这个问题，就不在推荐使用mixins了。
